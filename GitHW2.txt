Описание задания.

1 уровень сложности: 1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
2.Как вернуть файл из индекса в рабочий каталог?
3.Как отменить ошибочный commit ?
4.Как создать новую ветку и переключится в нее?
5.В чем отличение между fast-forward merge  and non fast-forfard merge?
6.Когда может возникнуть конфликт слияния веток, как  его разрешить?
7.Можно ли удалить ветку? Как? 

В ответах на вопросы 1-4, 7 необходимо указать конкретные команда git. 
На 5 и 6 вопросы дать объяснение своими словами.

1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
git checkout "имя файла" - уберет изменения в определенноим файле 
git checkout - уберет изменения во всех новых файлах

2.Как вернуть файл из индекса в рабочий каталог?
git restore --staged "имя файла"~ -вернет файл из индекса в рабочий каталог
git restore . - -вернет все файлы из индекса в рабочий каталог
git reset "имя файла" -вернет файл из индекса в рабочий каталог 

3.Как отменить ошибочный commit ?
git reset HEAD~1 возращает на предыдуший commit (1 значит на 1на commit назад)

4.Как создать новую ветку и переключится в нее?
git branch "имя ветки" - создает новую ветку
git checkout -b "имя ветки" -создает новую ветку и переходит в нее

5.В чем отличение между fast-forward merge  and non fast-forfard merge?
fast-forward merge это когда были изменения в одной ветке и мы быстро смогли закомитить все изменения 
non fast-forfard merge сумирующий комит которые были сделаны в разных ветках , результирующий комит

6.Когда может возникнуть конфликт слияния веток, как  его разрешить?
Когда редактируем один файл в нескольких ветках git, он не может решить какие изменения лучше .  
Как это разрешить 
Отредактировать код как вам нужно, добавить информацию о изменениях файла , проверить изменения в гит лог.

7.Можно ли удалить ветку? Как?
Можно ли удалить ветку? Да
Как? git branch -d "имя ветки"